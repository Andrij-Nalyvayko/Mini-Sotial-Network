{"version":3,"sources":["Data/Countries.js","Components/Filters/ChoosingOfCountries.tsx","Components/Filters/SelectingGender.tsx","Components/Filters/Filters.tsx","Components/UserCards.tsx","Components/GetData.ts","Api/BASE_URL.ts","Api/api.tsx","App.tsx","index.tsx"],"names":["countries","ChoosingOfCountries","register","htmlFor","id","multiple","name","map","elem","value","SelectingGender","Filters","useForm","handleSubmit","action","className","type","UserCards","users","user","src","picture","large","alt","first","last","gender","nat","dob","date","split","GetUsers","downloadingUsers","setUsers","query","a","getAll","join","get","url","process","then","param","console","log","data","results","axios","App","useState","filteredUsers","setFilteredUsers","URLSearchParams","useLocation","search","useEffect","ReactDOM","render","document","getElementById"],"mappings":"6NAEeA,EAFG,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,M,eCStGC,EAAuC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAErD,OACE,qCACE,uBAAOC,QAAQ,cAEf,gDACEC,GAAG,YACHC,UAAQ,EACRC,KAAK,uBACDJ,EAAS,cAJf,aAMGF,EAAUO,KAAI,SAAAC,GACb,OACE,wBAAmBC,MAAOD,EAA1B,SAAiCA,GAApBA,aCjBZE,EAAmC,SAAC,GAAkB,IAAhBR,EAAe,EAAfA,SACjD,OACE,mDACMA,EAAS,WADf,IAEEE,GAAG,iBAFL,UAIE,wBAAQK,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,yB,QCEOE,EAA2B,WACtC,MAAmCC,cAA3BV,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,aAElB,OACE,uBACEC,OAAO,uBACPC,UAAU,qBAFZ,UAKE,cAAC,EAAD,CACEb,SAAUA,EACVW,aAAcA,IAGhB,cAAC,EAAD,CACEX,SAAUA,IAGZ,wBAAQc,KAAK,SAAb,+B,OC3BOC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,qBAAKH,UAAU,QAAf,SACGG,EAAMX,KAAI,SAACY,GACV,OACE,sBAAyBJ,UAAU,mBAAnC,UAEE,qBAAKA,UAAU,wBAAf,SACE,qBAAKK,IAAKD,EAAKE,QAAQC,MAAOC,IAAI,oBAGpC,4BACE,2CACMJ,EAAKb,KAAKkB,MADhB,YACyBL,EAAKb,KAAKmB,UAIrC,4BACGN,EAAKO,SAGR,4BACGP,EAAKQ,MAGR,4BACGR,EAAKS,IAAIC,KAAKC,MAAM,KAAK,OArBpBX,EAAKS,IAAIC,Y,uBCJhBE,EAAQ,uCAAG,WACtBC,EACAC,EACAC,GAHsB,mBAAAC,EAAA,6DAKhBnC,EAAa,QAAUkC,EAAME,OAAO,aAAaC,KAAK,KACtDX,EAAS,WAAaQ,EAAMI,IAAI,UAEhCC,EARgB,UCRPC,wBDQO,8DAQuDd,GARvD,OAQgE1B,GARhE,SAUhBgC,EAAiBO,GAAKE,MAAK,SAACC,GAChCC,QAAQC,IAAIV,GAEZD,EAASS,EAAMG,KAAKC,YAbA,2CAAH,0D,iBENRd,EAAmB,SAACO,GAG/B,OAFAI,QAAQC,IAAIG,IAAMT,IAAIC,IAEfQ,IAAMT,IAAIC,ICKNS,G,MAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO/B,EAAP,KAAce,EAAd,KACA,EAA0CgB,mBAAiB/B,GAA3D,mBAAOgC,EAAP,KAAsBC,EAAtB,KACMjB,EAAQ,IAAIkB,gBAAgBC,cAAcC,QAUhD,OARAC,qBAAU,WACRxB,EAASC,EAAkBC,EAAUC,KACpC,IAEHqB,qBAAU,WACRJ,EAAiBjC,KAChB,CAACA,IAGF,sBAAKH,UAAU,aAAf,UACE,cAAC,EAAD,CAASG,MAAOA,EAAOiC,iBAAkBA,IACzC,cAAC,EAAD,CAAWjC,MAAOgC,S,QCpBxBM,IAASC,OACP,eAAC,IAAD,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,W","file":"static/js/main.d1248c16.chunk.js","sourcesContent":["const countries = ['AU', 'RB', 'CA', 'CH', 'DE', 'DK', 'ES', 'FI', 'FR', 'GB', 'IE', 'IR', 'NO', 'NL', 'NZ', 'TR', 'US'];\n\nexport default countries;\n","import React from 'react';\nimport countries from '../../Data/Countries'\nimport './style.scss';\n\ntype Props = {\n  handleSubmit: any,\n  register: any,\n};\n\nexport const ChoosingOfCountries: React.FC<Props> = ({ register }) => {\n\n  return (\n    <>\n      <label htmlFor=\"countries\"></label>\n      \n      <select\n        id=\"countries\"\n        multiple\n        name=\"ChoosingOfCountries\"\n        {...register(\"countries\")}\n      >\n        {countries.map(elem => {\n          return (\n            <option key={elem} value={elem}>{elem}</option>\n          );\n        })}\n      </select>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  register: any,\n};\n\nexport const SelectingGender: React.FC<Props> = ({ register }) => {\n  return (\n    <select\n      {...register(\"gender\")}\n      id=\"FilterByGender\"\n    >\n      <option value=\"all\">All</option>\n      <option value=\"male\">Male</option>\n      <option value=\"female\">Female</option>\n    </select>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { ChoosingOfCountries } from './ChoosingOfCountries';\nimport { SelectingGender } from './SelectingGender';\nimport { useForm } from 'react-hook-form';\nimport { User } from '../../Types/Users';\n\ntype Props = {\n  users: User[],\n  setFilteredUsers: Dispatch<SetStateAction<User[]>>;\n};\n\ntype Option = {\n  gender: string,\n  countries: string[],\n}\n\nexport const Filters: React.FC<Props> = () => {\n  const { register, handleSubmit } = useForm<Option>();\n\n  return (\n    <form\n      action=\"/Mini-Sotial-Network\"\n      className=\"my-network__filter\"\n    >\n\n      <ChoosingOfCountries\n        register={register}\n        handleSubmit={handleSubmit}\n      />\n\n      <SelectingGender\n        register={register}\n      />\n\n      <button type=\"submit\">\n        Apply filters\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../Types/Users';\n\ntype Props = {\n  users: User[],\n};\n\nexport const UserCards: React.FC<Props> = ({ users }) => {\n  return (\n    <div className=\"cards\">\n      {users.map((user: User) => {\n        return (\n          <div key={user.dob.date} className=\"my-network__card\">\n\n            <div className=\"my-network__card__img\">\n              <img src={user.picture.large} alt=\"Not found img\" />\n            </div>\n\n            <p>\n              <strong>\n                {`${user.name.first} ${user.name.last}`}\n              </strong>\n            </p>\n\n            <p>\n              {user.gender}\n            </p>\n\n            <p>\n              {user.nat}\n            </p>\n\n            <p>\n              {user.dob.date.split('T')[0]}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { AxiosResponse } from 'axios';\nimport { User } from '../Types/Users';\nimport BASE_URL from '../Api/BASE_URL'\n\ninterface Data {\n  data: {results: User[]}\n};\n\nexport const GetUsers = async (\n  downloadingUsers: (url: string) => Promise<any>,\n  setUsers: (value: User[]) => void,\n  query: any,\n) => {\n  const countries = ('&nat=' + query.getAll(\"countries\").join(','));\n  const gender = '&gender=' + query.get(\"gender\");\n\n  const url = `${BASE_URL}/api/?inc=gender,name,picture,dob,nat,id&results=15${gender}${countries}`;\n\n  await downloadingUsers(url).then((param: Data) => {\n    console.log(query);\n    \n    setUsers(param.data.results);\n  });\n};\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport default BASE_URL;\n","import axios from 'axios';\n\nexport const downloadingUsers = (url: string) => {\n  console.log(axios.get(url));\n  \n  return axios.get(url)\n};\n","import React, { useEffect, useState } from 'react';\nimport { Filters } from './Components/Filters/Filters';\nimport { useLocation } from 'react-router-dom';\nimport { UserCards } from './Components/UserCards';\nimport { GetUsers } from './Components/GetData';\nimport { downloadingUsers } from './Api/api';\nimport { User } from './Types/Users';\n\nimport './Styles/Style.scss';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [filteredUsers, setFilteredUsers] = useState<User[]>(users);\n  const query = new URLSearchParams(useLocation().search);\n\n  useEffect(() => {\n    GetUsers(downloadingUsers, setUsers, query);\n  }, []);\n\n  useEffect(() => {\n    setFilteredUsers(users);\n  }, [users]);\n\n  return (\n    <div className=\"my-network\">\n      <Filters users={users} setFilteredUsers={setFilteredUsers} />\n      <UserCards users={filteredUsers} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />,\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}