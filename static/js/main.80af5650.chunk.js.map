{"version":3,"sources":["Components/ChoosingOfCountries.tsx","Components/SelectingGender.tsx","Components/Filters.tsx","UserCards.tsx","Components/getData.ts","api/api.js","App.tsx","index.tsx"],"names":["ChoosingOfCountries","setNationals","nationals","addNationality","value","includes","filter","country","countries","className","onChange","anEvent","target","name","type","SelectingGender","setGender","id","Filters","users","setFilteredUsers","useState","gender","onSubmit","preventDefault","onClick","length","elem","nationality","UserCards","map","user","src","photoUrl","alt","fullName","birthdayData","userID","createUser","userData","setUsers","generalWay","results","result","info","seed","picture","large","first","last","dob","date","split","nat","prewData","getUsers","downloadingUsers","a","i","then","param","data","axios","get","process","App","filteredUsers","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80af5650.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from \"react\";\n// import { Link, NavLink } from 'react-router-dom';\n\ntype Props = {\n  setNationals: Dispatch<SetStateAction<string[]>>,\n  nationals: string[],\n}\n\nexport const ChoosingOfCountries: React.FC<Props> = ({ setNationals, nationals }) => {\n  // const countriesList = ['AU', 'BR', 'CA', 'CH', 'DE', 'DK', 'ES', 'FI', 'FR', 'GB', 'IE', 'IR', 'NO', 'NL', 'NZ', 'TR', 'US'];\n  \n  const addNationality = (value: string) => {\n    if (nationals.includes(value)) {\n      setNationals(nationals.filter((country: string) => country !==value));\n\n      return\n    }\n\n    setNationals((countries: string[]) => [...countries, value]);\n  }\n\n  return (\n    // <div>\n    //     {countriesList.map(elem => {\n    //       return (\n    //         <NavLink\n    //           to={`/country/${elem}`}\n    //           key={+new Date()}\n    //           type=\"button\"\n    //           // onClick={() => setText(elem.title)}\n    //           className=\"country\"\n    //           activeClassName=\"country__active\"\n    //         >\n    //           {elem}\n    //         </NavLink>\n    //       );\n    //     })}\n    //   </div>\n    <div className=\"countries\">\n      <label\n        className=\"country\"\n      >\n        AU\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"AU\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        BR\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"BR\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        CA\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"CA\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        CH\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"CH\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        DE\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"DE\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        DK\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"DK\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        ES\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"ES\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        FI\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"FI\"\n        />\n      </label>\n      \n      <label\n        className=\"country\"\n      >\n        FR\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"FR\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        GB\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"GB\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        IE\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"IE\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        IR\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"NO\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        NL\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"NL\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        NZ\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"NZ\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        TR\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"TR\"\n        />\n      </label>\n\n      <label\n        className=\"country\"\n      >\n        US\n        <input\n          onChange={(anEvent) => addNationality(anEvent.target.value)}\n          name=\"nationality\"\n          type=\"checkbox\"\n          value=\"US\"\n        />\n      </label>\n    </div>\n  )\n}","import React, { Dispatch, SetStateAction } from \"react\";\n\ntype Props = {\n  setGender: Dispatch<SetStateAction<string>>,\n}\n\nexport const SelectingGender: React.FC<Props> = ({ setGender }) => {\n\n  return (\n    <select\n      onChange={(anEvent) => setGender(anEvent.target.value)}\n      id=\"FilterByGender\"\n    >\n      <option value=\"all\">All</option>\n      <option value=\"male\">Male</option>\n      <option value=\"female\">Female</option>\n    </select>\n  )\n};\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport { ChoosingOfCountries } from './ChoosingOfCountries';\nimport { SelectingGender } from './SelectingGender';\nimport { Users } from '../Types/Users';\n\ntype Props = {\n  users: Users[],\n  setFilteredUsers: Dispatch<SetStateAction<Users[]>>;\n}\n\nexport const Filters: React.FC<Props> = ({users, setFilteredUsers}) => {\n  const [nationals, setNationals] = useState<string[]>([]);\n  const [gender, setGender] = useState<string>('all');\n  \n  const applyFilters = () => {\n    setFilteredUsers(() => {\n      if (nationals.length === 0 && gender === 'all') {\n\n        return users\n      }\n\n      return [...users].filter((elem: Users) => {\n        return ((elem.gender === gender || gender === 'all') && (nationals.includes(elem.nationality) || nationals.length === 0));\n      })\n    });\n  }\n\n  return (\n    <form\n      onSubmit={(anEvent) => {\n        anEvent.preventDefault();\n      }}\n\n      className=\"my-network__filter\"\n      >\n\n      <ChoosingOfCountries setNationals={setNationals} nationals={nationals} />\n      <SelectingGender setGender={setGender} />\n\n      <button\n        type=\"button\"\n        onClick={applyFilters}\n      >\n        Apply filters\n      </button>\n    </form>\n  )\n}","import React from 'react';\nimport { Users } from './Types/Users';\n\ntype Props = {\n  users: Users[],\n}\n\nexport const UserCards: React.FC<Props> = ({ users }) => {\n\n  return (\n    <div className=\"cards\">\n      {users.map((user: Users) => {\n        return (\n          <div key={user.userID} className=\"my-network__card\">\n\n            <div className=\"my-network__card__img\">\n              <img src={user.photoUrl} alt={`Not found img`}/>\n            </div>\n\n            <p>\n              <strong>\n                {user.fullName}\n              </strong>\n            </p>\n\n            <p>\n              {user.gender}\n            </p>\n\n            <p>\n              {user.nationality}\n            </p>\n\n            <p>\n              {user.birthdayData}\n            </p>\n          </div>)\n      })}\n    </div>\n  )\n}","import { AxiosResponse } from 'axios';\nimport { Users } from '../Types/Users';\n\nconst createUser = (userData: any, setUsers: (arg0: (prewData: Users[]) => any[]) => void) => {\n  const generalWay = userData.results[0];\n\n  const result = {\n    userID: userData.info.seed,\n    photoUrl: generalWay.picture.large,\n    fullName: `${generalWay.name.first} ${generalWay.name.last}`,\n    gender: generalWay.gender,\n    birthdayData: generalWay.dob.date.split('T')[0],\n    nationality: generalWay.nat,\n  };\n  \n  setUsers((prewData: Users[]) => [...prewData, result]);\n}\n\nexport const getUsers = async (\n  downloadingUsers: { (): Promise<AxiosResponse<any, any>>; (): Promise<any>; },\n  setUsers: { (value: any): void; (arg0: (prewData: Users[]) => any): void; }\n  ) => {\n\n  for (let i = 0; i < 15; i++) {\n    await downloadingUsers().then(param => {\n      createUser(param.data, setUsers);\n    })\n  }\n}","import axios from 'axios';\n\nexport const downloadingUsers = () => {\n  const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\n  return axios.get(BASE_URL);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Filters } from './Components/Filters';\nimport { UserCards } from './UserCards';\nimport { getUsers } from './Components/getData'\nimport { downloadingUsers } from './api/api';\nimport { Users } from './Types/Users';\n\nimport './styles/style.scss';\n\n\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<Users[]>([]);\n  let [filteredUsers, setFilteredUsers] = useState<Users[]>(users);\n\n  useEffect(() => {\n    getUsers(downloadingUsers, setUsers);\n  }, [])\n\n  useEffect(() => {\n    setFilteredUsers(users);\n  }, [users])\n\n  return (\n    <div className=\"my-network\">\n      <Filters users={users} setFilteredUsers={setFilteredUsers}/>\n      <UserCards users={filteredUsers}/>\n    </ div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}