{"version":3,"sources":["Components/Filters/ChoosingOfCountries.tsx","Components/Filters/SelectingGender.tsx","Components/Filters/Filters.tsx","Components/UserCards.tsx","Components/GetData.ts","Api/api.js","App.tsx","index.jsx"],"names":["ChoosingOfCountries","setNationals","nationals","map","elem","console","log","to","className","activeClassName","Date","SelectingGender","setGender","onChange","anEvent","target","value","id","Filters","users","setFilteredUsers","useState","gend","onSubmit","preventDefault","type","onClick","length","filter","gender","includes","nat","UserCards","user","src","picture","large","alt","name","first","last","dob","date","split","GetUsers","downloadingUsers","setUsers","a","then","param","data","results","axios","get","BASE_URL","App","filteredUsers","useEffect","ReactDOM","render","document","getElementById"],"mappings":"sNAQaA,EAAuC,SAAC,GAAgC,EAA9BC,aAA8B,EAAhBC,UAanE,OACE,8BAboB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAclGC,KAAI,SAAAC,GAGjB,OAFAC,QAAQC,IAAIF,GAGV,cAAC,IAAD,CACEG,GAAE,mBAAcH,GAIhBI,UAAU,UACVC,gBAAgB,kBANlB,SAQGL,IANK,IAAIM,YCvBXC,EAAmC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACjD,OACE,yBACEC,SAAU,SAACC,GAAD,OAAaF,EAAUE,EAAQC,OAAOC,QAChDC,GAAG,iBAFL,UAIE,wBAAQD,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,wBCJOE,EAA2B,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAChD,EAAkCC,mBAAmB,IAArD,mBAAOnB,EAAP,KAAkBD,EAAlB,KACA,EAA0BoB,mBAAiB,OAA3C,mBAAOC,EAAP,KAAaV,EAAb,KAcA,OACE,uBACEW,SAAU,SAACT,GACTA,EAAQU,kBAEVhB,UAAU,qBAJZ,UAOE,cAAC,EAAD,CAAqBP,aAAcA,EAAcC,UAAWA,IAC5D,cAAC,EAAD,CAAiBU,UAAWA,IAE5B,wBACEa,KAAK,SACLC,QAzBe,WACnBN,GAAiB,WACf,OAAyB,IAArBlB,EAAUyB,QAAyB,QAATL,EACrBH,EAGF,YAAIA,GAAOS,QAAO,SAACxB,GACxB,OAASA,EAAKyB,SAAWP,GAAiB,QAATA,KAAoBpB,EAAU4B,SAAS1B,EAAK2B,MAA6B,IAArB7B,EAAUyB,eAgBjG,+BC9BOK,EAA6B,SAAC,GAAe,IAAbb,EAAY,EAAZA,MAC3C,OACE,qBAAKX,UAAU,QAAf,SACGW,EAAMhB,KAAI,SAAC8B,GACV,OACE,sBAAyBzB,UAAU,mBAAnC,UAEE,qBAAKA,UAAU,wBAAf,SACE,qBAAK0B,IAAKD,EAAKE,QAAQC,MAAOC,IAAI,oBAGpC,4BACE,2CACMJ,EAAKK,KAAKC,MADhB,YACyBN,EAAKK,KAAKE,UAIrC,4BACGP,EAAKJ,SAGR,4BACGI,EAAKF,MAGR,4BACGE,EAAKQ,IAAIC,KAAKC,MAAM,KAAK,OArBpBV,EAAKQ,IAAIC,Y,yBCRhBE,EAAQ,uCAAG,WACtBC,EACAC,GAFsB,SAAAC,EAAA,sEAIhBF,IAAmBG,MAAK,SAAAC,GAC5BH,EAASG,EAAMC,KAAKC,YALA,2CAAH,wD,iBCFRN,EAAmB,WAI9B,OAAOO,IAAMC,IAAIC,8ECGNC,G,MAAgB,WAC3B,MAA0BlC,mBAAiB,IAA3C,mBAAOF,EAAP,KAAc2B,EAAd,KACA,EAA0CzB,mBAAiBF,GAA3D,mBAAOqC,EAAP,KAAsBpC,EAAtB,KAUA,OARAqC,qBAAU,WACRb,EAASC,EAAkBC,KAC1B,IAEHW,qBAAU,WACRrC,EAAiBD,KAChB,CAACA,IAGF,sBAAKX,UAAU,aAAf,UACE,cAAC,EAAD,CAASW,MAAOA,EAAOC,iBAAkBA,IACzC,cAAC,EAAD,CAAWD,MAAOqC,SClBxBE,IAASC,OACP,eAAC,IAAD,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,W","file":"static/js/main.c93f8eea.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  setNationals: Dispatch<SetStateAction<string[]>>,\n  nationals: string[],\n};\n\nexport const ChoosingOfCountries: React.FC<Props> = ({ setNationals, nationals }) => {\n  const countriesList = ['AU', 'RB', 'CA', 'CH', 'DE', 'DK', 'ES', 'FI', 'FR', 'GB', 'IE', 'IR', 'NO', 'NL', 'NZ', 'TR', 'US'];\n\n  const addNationality = (value: string) => {\n    if (nationals.includes(value)) {\n      setNationals(nationals.filter((country: string) => country !== value));\n\n      return;\n    }\n\n    setNationals((countries: string[]) => [...countries, value]);\n  };\n\n  return (\n    <div>\n        {countriesList.map(elem => {\n          console.log(elem);\n          \n          return (\n            <NavLink\n              to={`/country/${elem}`}\n              key={+new Date()}\n              // type=\"button\"\n              // onClick={() => setText(elem.title)}\n              className=\"country\"\n              activeClassName=\"country__active\"\n            >\n              {elem}\n            </NavLink>\n          );\n        })}\n      </div>\n    // <div className=\"countries\">\n    //   <label htmlFor=\"AU\" className=\"country\">\n    //     AU\n    //     <input\n    //       id=\"AU\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"AU\"\n    //     />\n    //   </label>\n\n    //   <label htmlFor=\"BR\" className=\"country\">\n    //     BR\n    //     <input\n    //       id=\"BR\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"BR\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"CA\">\n    //     CA\n    //     <input\n    //       id=\"CA\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"CA\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"CH\">\n    //     CH\n    //     <input\n    //       id=\"CH\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"CH\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"DE\">\n    //     DE\n    //     <input\n    //       id=\"DE\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"DE\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"DK\">\n    //     DK\n    //     <input\n    //       id=\"DK\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"DK\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"ES\">\n    //     ES\n    //     <input\n    //       id=\"ES\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"ES\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"FI\">\n    //     FI\n    //     <input\n    //       id=\"FI\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"FI\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"FR\">\n    //     FR\n    //     <input\n    //       id=\"FR\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"FR\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"GB\">\n    //     GB\n    //     <input\n    //       id=\"GB\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"GB\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"IE\">\n    //     IE\n    //     <input\n    //       id=\"IE\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"IE\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"IR\">\n    //     IR\n    //     <input\n    //       id=\"IR\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"NO\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"NL\">\n    //     NL\n    //     <input\n    //       id=\"NL\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"NL\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"NZ\">\n    //     NZ\n    //     <input\n    //       id=\"NZ\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"NZ\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"TR\">\n    //     TR\n    //     <input\n    //       id=\"TR\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"TR\"\n    //     />\n    //   </label>\n\n    //   <label className=\"country\" htmlFor=\"US\">\n    //     US\n    //     <input\n    //       id=\"US\"\n    //       onChange={(anEvent) => addNationality(anEvent.target.value)}\n    //       name=\"nationality\"\n    //       type=\"checkbox\"\n    //       value=\"US\"\n    //     />\n    //   </label>\n    // </div>\n  );\n};\n","import React, { Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  setGender: Dispatch<SetStateAction<string>>,\n};\n\nexport const SelectingGender: React.FC<Props> = ({ setGender }) => {\n  return (\n    <select\n      onChange={(anEvent) => setGender(anEvent.target.value)}\n      id=\"FilterByGender\"\n    >\n      <option value=\"all\">All</option>\n      <option value=\"male\">Male</option>\n      <option value=\"female\">Female</option>\n    </select>\n  );\n};\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport { ChoosingOfCountries } from './ChoosingOfCountries';\nimport { SelectingGender } from './SelectingGender';\nimport { User } from '../../Types/Users';\n\ntype Props = {\n  users: User[],\n  setFilteredUsers: Dispatch<SetStateAction<User[]>>;\n};\n\nexport const Filters: React.FC<Props> = ({ users, setFilteredUsers }) => {\n  const [nationals, setNationals] = useState<string[]>([]);\n  const [gend, setGender] = useState<string>('all');\n\n  const applyFilters = () => {\n    setFilteredUsers(() => {\n      if (nationals.length === 0 && gend === 'all') {\n        return users;\n      }\n\n      return [...users].filter((elem: User) => {\n        return ((elem.gender === gend || gend === 'all') && (nationals.includes(elem.nat) || nationals.length === 0));\n      });\n    });\n  };\n\n  return (\n    <form\n      onSubmit={(anEvent) => {\n        anEvent.preventDefault();\n      }}\n      className=\"my-network__filter\"\n    >\n\n      <ChoosingOfCountries setNationals={setNationals} nationals={nationals} />\n      <SelectingGender setGender={setGender} />\n\n      <button\n        type=\"button\"\n        onClick={applyFilters}\n      >\n        Apply filters\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../Types/Users';\n\ntype Props = {\n  users: User[],\n};\n\nexport const UserCards: React.FC<Props> = ({ users }) => {\n  return (\n    <div className=\"cards\">\n      {users.map((user: User) => {\n        return (\n          <div key={user.dob.date} className=\"my-network__card\">\n\n            <div className=\"my-network__card__img\">\n              <img src={user.picture.large} alt=\"Not found img\" />\n            </div>\n\n            <p>\n              <strong>\n                {`${user.name.first} ${user.name.last}`}\n              </strong>\n            </p>\n\n            <p>\n              {user.gender}\n            </p>\n\n            <p>\n              {user.nat}\n            </p>\n\n            <p>\n              {user.dob.date.split('T')[0]}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { AxiosResponse } from 'axios';\nimport { SetStateAction } from 'react';\nimport { User } from '../Types/Users';\n\nexport const GetUsers = async (\n  downloadingUsers: { (): Promise<AxiosResponse<any, any>>; (): Promise<any>; },\n  setUsers: { (value: SetStateAction<User[]>): void; (arg0: any): void; },\n) => {\n  await downloadingUsers().then(param => {\n    setUsers(param.data.results);\n  });\n};\n","import axios from 'axios';\n\nexport const downloadingUsers = () => {\n  const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n  const getUsers = '/api/?inc=gender,name,picture,dob,id,nat&results=15';\n\n  return axios.get(BASE_URL + getUsers);\n};","import React, { useEffect, useState } from 'react';\nimport { Filters } from './Components/Filters/Filters';\nimport { UserCards } from './Components/UserCards';\nimport { GetUsers } from './Components/GetData';\nimport { downloadingUsers } from './Api/api';\nimport { User } from './Types/Users';\n\nimport './Styles/Style.scss';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [filteredUsers, setFilteredUsers] = useState<User[]>(users);\n\n  useEffect(() => {\n    GetUsers(downloadingUsers, setUsers);\n  }, []);\n\n  useEffect(() => {\n    setFilteredUsers(users);\n  }, [users]);\n\n  return (\n    <div className=\"my-network\">\n      <Filters users={users} setFilteredUsers={setFilteredUsers} />\n      <UserCards users={filteredUsers} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />,\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}